name: Deploy to Server
on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Install dependencies
      run:  npm install --legacy-peer-deps
      
    - name: Build React app
      run: npm run build
      env:
        REACT_APP_SUPABASE_URL: ${{ secrets.REACT_APP_SUPABASE_URL }}
        REACT_APP_SUPABASE_ANON_KEY: ${{ secrets.REACT_APP_SUPABASE_ANON_KEY }}
        CI: false
        ESLINT_NO_DEV_ERRORS: true

    - name: Deploy to server
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: 168.187.138.13
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}
        script: |
          # Stop Apache (ignore if fails)
          echo '${{ secrets.SERVER_PASSWORD }}' | sudo -S systemctl stop apache2 || true
          
          # Backup old site
          echo '${{ secrets.SERVER_PASSWORD }}' | sudo -S mv /var/www/html /var/www/html_backup_$(date +%Y%m%d) || true
          
          # Create new directory
          echo '${{ secrets.SERVER_PASSWORD }}' | sudo -S mkdir -p /var/www/html
          
          # Set permissions
          echo '${{ secrets.SERVER_PASSWORD }}' | sudo -S chown -R $USER:$USER /var/www/html
          
    - name: Copy files to server
      uses: appleboy/scp-action@v0.1.4
      with:
        host: 168.187.138.13
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}
        source: "build/*"
        target: "/var/www/html/"
        strip_components: 1
        
    - name: Restart Apache
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: 168.187.138.13
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}
        script: |
          # Start Apache
          echo '${{ secrets.SERVER_PASSWORD }}' | sudo -S systemctl start apache2
          echo '${{ secrets.SERVER_PASSWORD }}' | sudo -S systemctl enable apache2